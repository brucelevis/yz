globalmgr = globalmgr or {}

function globalmgr.init()
	assert(not globalmgr.binit)
	globalmgr.binit = true
	globalmgr.id = 0
	globalmgr.id_allocto = {}	-- {srvname = {分配给该服务器的各个ID段}}
	local server = cserver.new()
	server:loadfromdatabase()
	server:add("runno",1)
	if server:query("runno") == 1 then
		server:create()
	end
	globalmgr.server = server

	local votemgr = cvotemgr.new()
	globalmgr.votemgr = votemgr

	local globalshopdb = cglobalshopdb.new()
	globalshopdb:loadfromdatabase()
	globalmgr.shop = globalshopdb

	globalmgr.rank = {}
	local arenarank = carenarank.new()
	arenarank:loadfromdatabase()
	globalmgr.rank.arena = arenarank
end

function globalmgr.onlogin(player)
	for i,ranks in pairs(globalmgr.rank) do
		if ranks.onlogin then
			ranks:onlogin(player)
		end
	end
end

function globalmgr.onlogoff(player,reason)
	for i,ranks in pairs(globalmgr.rank) do
		if ranks.onlogoff then
			ranks:onlogoff(player,reason)
		end
	end
end

function globalmgr.onhourupdate()
end

function globalmgr.onfivehourupdate()
	globalmgr.shop:onfivehourupdate()
	for i,ranks in pairs(globalmgr.rank) do
		if ranks.onfivehourupdate then
			ranks:onfivehourupdate()
		end
	end
end

function globalmgr.genid(fromsrv,range)
	range = range or 10000
	--可用范围: (startid,endid]
	local startid = globalmgr.id
	globalmgr.id = globalmgr.id + range
	local endid = globalmgr.id
	if not globalmgr.id_allocto[fromsrv] then
		globalmgr.id_allocto[fromsrv] = {}
	end
	table.insert(globalmgr.id_allocto[fromsrv],{startid,endid})
	return startid,endid
end

function globalmgr.fromsrv(id)
	for srvname,list in pairs(globalmgr.id_allocto) do
		for i,range in ipairs(list) do
			if range[1] < id and id <= range[2] then
				return srvname
			end
		end
	end
end

-- 生成和本地服务器相关的全局唯一id
function globalmgr._genid(srvname)
	srvname = srvname or cserver.getsrvname()
	if not globalmgr._id then
		globalmgr._id = {}
	end
	if not globalmgr._id[srvname] then
		globalmgr._id[srvname] = 0
	end
	globalmgr._id[srvname] = globalmgr._id[srvname] + 1
	local maxid = 1000000000
	if globalmgr._id[srvname] >= maxid then
		globalmgr._id[srvname] = 1
	end
	local srv = data_RoGameSrvList[srvname]
	return srv.srvno * maxid + globalmgr._id[srvname]
end

function globalmgr.srvname(id)
	local maxid = 1000000000
	local srvno = math.floor(id/maxid)
	if not globalmgr._srvno_srvname then
		globalmgr._srvno_srvname = {}
		for srvname,srv in pairs(data_RoGameSrvList) do
			globalmgr._srvno_srvname[srv.srvno] = srvname
		end
	end
	return globalmgr._srvno_srvname[srvno]
end

return globalmgr
